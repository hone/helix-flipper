class TextTransform
  attr_accessor :content

  def initialize(content)
    @content = content
  end

  def widen
    new_string = ""

    content.each_char do |c|
      new_string += widen_map[c] ? widen_map[c] : c
    end

    new_string
  end

  def narrow
    new_string = ""

    content.each_char do |c|
      new_string += narrow_map[c] ? narrow_map[c] : c
    end

    new_string
  end

  def flip
    new_string = ""

    content.each_char do |c|
      new_string += flip_map[c] ? flip_map[c] : c
    end

    new_string
  end

  private

  def widen_map
    {
      ' ' => '  ', '!' => '！', '"' => '＂', '#' => '＃', '$' => '＄', '%' => '％', '&' => '＆', '\'' => '＇',
      '(' => '（', ')' => '）', '*' => '＊', '+' => '＋', ',' => '，', '-' => '－', '.' => '．', '/' => '／',
      '0' => '０', '1' => '１', '2' => '２', '3' => '３', '4' => '４', '5' => '５', '6' => '６', '7' => '７',
      '8' => '８', '9' => '９', ':' => '：', ';' => '；', '<' => '＜', '=' => '＝', '>' => '＞', '?' => '？',
      '@' => '＠', 'A' => 'Ａ', 'B' => 'Ｂ', 'C' => 'Ｃ', 'D' => 'Ｄ', 'E' => 'Ｅ', 'F' => 'Ｆ', 'G' => 'Ｇ',
      'H' => 'Ｈ', 'I' => 'Ｉ', 'J' => 'Ｊ', 'K' => 'Ｋ', 'L' => 'Ｌ', 'M' => 'Ｍ', 'N' => 'Ｎ', 'O' => 'Ｏ',
      'P' => 'Ｐ', 'Q' => 'Ｑ', 'R' => 'Ｒ', 'S' => 'Ｓ', 'T' => 'Ｔ', 'U' => 'Ｕ', 'V' => 'Ｖ', 'W' => 'Ｗ',
      'X' => 'Ｘ', 'Y' => 'Ｙ', 'Z' => 'Ｚ', '[' => '［', '\\' => '＼', ']' => '］', '^' => '＾', '_' => '＿',
      '`' => '｀', 'a' => 'ａ', 'b' => 'ｂ', 'c' => 'ｃ', 'd' => 'ｄ', 'e' => 'ｅ', 'f' => 'ｆ', 'g' => 'ｇ',
      'h' => 'ｈ', 'i' => 'ｉ', 'j' => 'ｊ', 'k' => 'ｋ', 'l' => 'ｌ', 'm' => 'ｍ', 'n' => 'ｎ', 'o' => 'ｏ',
      'p' => 'ｐ', 'q' => 'ｑ', 'r' => 'ｒ', 's' => 'ｓ', 't' => 'ｔ', 'u' => 'ｕ', 'v' => 'ｖ', 'w' => 'ｗ',
      'x' => 'ｘ', 'y' => 'ｙ', 'z' => 'ｚ', '{' => '｛', '|' => '｜', '}' => '｝', '~' => '～'
    }
  end

  def narrow_map
    {
      '  ' => ' ', '！' => '!', '＂' => '"', '＃' => '#', '＄' => '$', '％' => '%', '＆' => '&', '＇' => '\'',
      '（' => '(', '）' => ')', '＊' => '*', '＋' => '', '，' => ',', '－' => '-', '．' => '.', '／' => '/',
      '０' => '0', '１' => '1', '２' => '2', '３' => '3', '４' => '4', '５' => '5', '６' => '6', '７' => '7',
      '８' => '8', '９' => '9', '：' => ':', '；' => ';', '＜' => '<', '＝' => '=', '＞' => '>', '？' => '?',
      '＠' => '@', 'Ａ' => 'A', 'Ｂ' => 'B', 'Ｃ' => 'C', 'Ｄ' => 'D', 'Ｅ' => 'E', 'Ｆ' => 'F', 'Ｇ' => 'G',
      'Ｈ' => 'H', 'Ｉ' => 'I', 'Ｊ' => 'J', 'Ｋ' => 'K', 'Ｌ' => 'L', 'Ｍ' => 'M', 'Ｎ' => 'N', 'Ｏ' => 'O',
      'Ｐ' => 'P', 'Ｑ' => 'Q', 'Ｒ' => 'R', 'Ｓ' => 'S', 'Ｔ' => 'T', 'Ｕ' => 'U', 'Ｖ' => 'V', 'Ｗ' => 'W',
      'Ｘ' => 'X', 'Ｙ' => 'Y', 'Ｚ' => 'Z', '［' => '[', '＼' => '\\', '］' => ']', '＾' => '^', '＿' => '_',
      '｀' => '`', 'ａ' => 'a', 'ｂ' => 'b', 'ｃ' => 'c', 'ｄ' => 'd', 'ｅ' => 'e', 'ｆ' => 'f', 'ｇ' => 'g',
      'ｈ' => 'h', 'ｉ' => 'i', 'ｊ' => 'j', 'ｋ' => 'k', 'ｌ' => 'l', 'ｍ' => 'm', 'ｎ' => 'n', 'ｏ' => 'o',
      'ｐ' => 'p', 'ｑ' => 'q', 'ｒ' => 'r', 'ｓ' => 's', 'ｔ' => 't', 'ｕ' => 'u', 'ｖ' => 'v', 'ｗ' => 'w',
      'ｘ' => 'x', 'ｙ' => 'y', 'ｚ' => 'z', '｛' => '{', '｜' => '|', '｝' => '}', '～' => '~'
    }
  end

  def flip_map
    {
      ' ' => ' ', '!' => '¡', '"' => '„', '&' => '⅋', '\'' => '‚', '(' => ')', ')' => '(', ',' => '‘', '.' => '˙',
      '1' => 'Ɩ', '2' => 'ᄅ', '3' => 'Ɛ', '4' => 'ㄣ', '5' => 'ϛ', '6' => '9', '7' => 'ㄥ',
      '8' => '8', '9' => '6', ';' => '؛', '<' => '>', '>' => '<', '?' => '¿',
      'A' => '∀', 'B' => '𐐒', 'C' => 'Ↄ', 'D' => '◖', 'E' => 'Ǝ', 'F' => 'Ⅎ', 'G' => '⅁', 'H' => 'H', 'I' => 'I',
      'J' => 'ſ', 'K' => 'ʞ', 'L' => '⅂', 'M' => 'W', 'N' => 'N', 'O' => 'O',
      'P' => 'Ԁ', 'Q' => 'Ό', 'R' => 'ᴚ', 'S' => 'S', 'T' => '⊥', 'U' => '∩', 'V' => 'ᴧ', 'W' => 'M',
      'X' => 'X', 'Y' => '⅄', 'Z' => 'Z', '[' => ']', ']' => '[', '^' => 'v', '_' => '‾',
      '`' => ',', 'a' => 'ɐ', 'b' => 'q', 'c' => 'ɔ', 'd' => 'p', 'e' => 'ǝ', 'f' => 'ɟ', 'g' => 'ƃ',
      'h' => 'ɥ', 'i' => 'ᴉ', 'j' => 'ɾ', 'k' => 'ʞ', 'l' => 'l', 'm' => 'ɯ', 'n' => 'u', 'o' => 'o',
      'p' => 'd', 'q' => 'b', 'r' => 'ɹ', 's' => 's', 't' => 'ʇ', 'u' => 'n', 'v' => 'ʌ', 'w' => 'ʍ',
      'x' => 'x', 'y' => 'ʎ', '{' => '}', '}' => '{'
    }
  end
end
